/* Generated by Mark's REM script, mark@battlesnake.co.uk, github:battlesnake */

@px-in-rem: (1/16) / (1) + 0rem;
@rem-in-px: (1) / (1/16) + 0px;

.left (@size) {
	left: unit(@size, px);
	left: unit(@size * (1/16), rem);
}

.top (@size) {
	top: unit(@size, px);
	top: unit(@size * (1/16), rem);
}

.right (@size) {
	right: unit(@size, px);
	right: unit(@size * (1/16), rem);
}

.bottom (@size) {
	bottom: unit(@size, px);
	bottom: unit(@size * (1/16), rem);
}

.margin-left (@size) {
	margin-left: unit(@size, px);
	margin-left: unit(@size * (1/16), rem);
}

.margin-top (@size) {
	margin-top: unit(@size, px);
	margin-top: unit(@size * (1/16), rem);
}

.margin-right (@size) {
	margin-right: unit(@size, px);
	margin-right: unit(@size * (1/16), rem);
}

.margin-bottom (@size) {
	margin-bottom: unit(@size, px);
	margin-bottom: unit(@size * (1/16), rem);
}

.padding-left (@size) {
	padding-left: unit(@size, px);
	padding-left: unit(@size * (1/16), rem);
}

.padding-top (@size) {
	padding-top: unit(@size, px);
	padding-top: unit(@size * (1/16), rem);
}

.padding-right (@size) {
	padding-right: unit(@size, px);
	padding-right: unit(@size * (1/16), rem);
}

.padding-bottom (@size) {
	padding-bottom: unit(@size, px);
	padding-bottom: unit(@size * (1/16), rem);
}

.border (@size) {
	border: unit(@size, px);
	border: unit(@size * (1/16), rem);
}

.border-spacing (@size) {
	border-spacing: unit(@size, px);
	border-spacing: unit(@size * (1/16), rem);
}

.border-top-left-radius (@size) {
	border-top-left-radius: unit(@size, px);
	border-top-left-radius: unit(@size * (1/16), rem);
}

.border-top-left-radius (@horizontal; @vertical) {
	border-top-left-radius: unit(@horizontal, px) unit(@vertical, px);
	border-top-left-radius: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.border-top-right-radius (@size) {
	border-top-right-radius: unit(@size, px);
	border-top-right-radius: unit(@size * (1/16), rem);
}

.border-top-right-radius (@horizontal; @vertical) {
	border-top-right-radius: unit(@horizontal, px) unit(@vertical, px);
	border-top-right-radius: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.border-bottom-left-radius (@size) {
	border-bottom-left-radius: unit(@size, px);
	border-bottom-left-radius: unit(@size * (1/16), rem);
}

.border-bottom-left-radius (@horizontal; @vertical) {
	border-bottom-left-radius: unit(@horizontal, px) unit(@vertical, px);
	border-bottom-left-radius: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.border-bottom-right-radius (@size) {
	border-bottom-right-radius: unit(@size, px);
	border-bottom-right-radius: unit(@size * (1/16), rem);
}

.border-bottom-right-radius (@horizontal; @vertical) {
	border-bottom-right-radius: unit(@horizontal, px) unit(@vertical, px);
	border-bottom-right-radius: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.border-radius (@size) {
	border-radius: unit(@size, px);
	border-radius: unit(@size * (1/16), rem);
}

.border-radius (@nw; @ne; @se; @sw) {
	border-radius: unit(@nw, px) unit(@ne, px) unit(@se, px) unit(@sw, px);
	border-radius: unit(@nw * (1/16), rem) unit(@ne * (1/16), rem) unit(@se * (1/16), rem) unit(@sw * (1/16), rem);
}

.border-radius (@nwh; @nwv; @neh; @nev; @seh; @sev; @swh; @swv) {
	border-radius: unit(@nwh, px) unit(@nwv, px) unit(@neh, px) unit(@nev, px) unit(@seh, px) unit(@sev, px) unit(@swh, px) unit(@swv, px);
	border-radius: unit(@nwh * (1/16), rem) unit(@nwv * (1/16), rem) unit(@neh * (1/16), rem) unit(@nev * (1/16), rem) unit(@seh * (1/16), rem) unit(@sev * (1/16), rem) unit(@swh * (1/16), rem) unit(@swv * (1/16), rem);
}

.border (@size; @style) {
	border: unit(@size, px) @style;
	border: unit(@size * (1/16), rem) @style;
}

.border (@size; @style; @color) {
	border: unit(@size, px) @style @color;
	border: unit(@size * (1/16), rem) @style @color;
}

.border-left (@size; @style) {
	border-left: unit(@size, px) @style;
	border-left: unit(@size * (1/16), rem) @style;
}

.border-left (@size; @style; @color) {
	border-left: unit(@size, px) @style @color;
	border-left: unit(@size * (1/16), rem) @style @color;
}

.border-top (@size; @style) {
	border-top: unit(@size, px) @style;
	border-top: unit(@size * (1/16), rem) @style;
}

.border-top (@size; @style; @color) {
	border-top: unit(@size, px) @style @color;
	border-top: unit(@size * (1/16), rem) @style @color;
}

.border-right (@size; @style) {
	border-right: unit(@size, px) @style;
	border-right: unit(@size * (1/16), rem) @style;
}

.border-right (@size; @style; @color) {
	border-right: unit(@size, px) @style @color;
	border-right: unit(@size * (1/16), rem) @style @color;
}

.border-bottom (@size; @style) {
	border-bottom: unit(@size, px) @style;
	border-bottom: unit(@size * (1/16), rem) @style;
}

.border-bottom (@size; @style; @color) {
	border-bottom: unit(@size, px) @style @color;
	border-bottom: unit(@size * (1/16), rem) @style @color;
}

.border-left-width (@size) {
	border-left-width: unit(@size, px);
	border-left-width: unit(@size * (1/16), rem);
}

.border-top-width (@size) {
	border-top-width: unit(@size, px);
	border-top-width: unit(@size * (1/16), rem);
}

.border-right-width (@size) {
	border-right-width: unit(@size, px);
	border-right-width: unit(@size * (1/16), rem);
}

.border-bottom-width (@size) {
	border-bottom-width: unit(@size, px);
	border-bottom-width: unit(@size * (1/16), rem);
}

.font-size (@size) {
	font-size: unit(@size, px);
	font-size: unit(@size * (1/16), rem);
}

.line-height (@size) {
	line-height: unit(@size, px);
	line-height: unit(@size * (1/16), rem);
}

.width (@size) {
	width: unit(@size, px);
	width: unit(@size * (1/16), rem);
}

.height (@size) {
	height: unit(@size, px);
	height: unit(@size * (1/16), rem);
}

.min-width (@size) {
	min-width: unit(@size, px);
	min-width: unit(@size * (1/16), rem);
}

.min-height (@size) {
	min-height: unit(@size, px);
	min-height: unit(@size * (1/16), rem);
}

.max-width (@size) {
	max-width: unit(@size, px);
	max-width: unit(@size * (1/16), rem);
}

.max-height (@size) {
	max-height: unit(@size, px);
	max-height: unit(@size * (1/16), rem);
}

.margin (@size) {
	margin: unit(@size, px);
	margin: unit(@size * (1/16), rem);
}

.margin (@horizontal; @vertical) {
	margin: unit(@horizontal, px) unit(@vertical, px);
	margin: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.margin (@top; @vertical; @bottom) {
	margin: unit(@top, px) unit(@vertical, px) unit(@bottom, px);
	margin: unit(@top * (1/16), rem) unit(@vertical * (1/16), rem) unit(@bottom * (1/16), rem);
}

.margin (@top; @right; @bottom; @left) {
	margin: unit(@top, px) unit(@right, px) unit(@bottom, px) unit(@left, px);
	margin: unit(@top * (1/16), rem) unit(@right * (1/16), rem) unit(@bottom * (1/16), rem) unit(@left * (1/16), rem);
}

.padding (@size) {
	padding: unit(@size, px);
	padding: unit(@size * (1/16), rem);
}

.padding (@horizontal; @vertical) {
	padding: unit(@horizontal, px) unit(@vertical, px);
	padding: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.padding (@top; @vertical; @bottom) {
	padding: unit(@top, px) unit(@vertical, px) unit(@bottom, px);
	padding: unit(@top * (1/16), rem) unit(@vertical * (1/16), rem) unit(@bottom * (1/16), rem);
}

.padding (@top; @right; @bottom; @left) {
	padding: unit(@top, px) unit(@right, px) unit(@bottom, px) unit(@left, px);
	padding: unit(@top * (1/16), rem) unit(@right * (1/16), rem) unit(@bottom * (1/16), rem) unit(@left * (1/16), rem);
}

.border-width (@size) {
	border-width: unit(@size, px);
	border-width: unit(@size * (1/16), rem);
}

.border-width (@horizontal; @vertical) {
	border-width: unit(@horizontal, px) unit(@vertical, px);
	border-width: unit(@horizontal * (1/16), rem) unit(@vertical * (1/16), rem);
}

.border-width (@top; @vertical; @bottom) {
	border-width: unit(@top, px) unit(@vertical, px) unit(@bottom, px);
	border-width: unit(@top * (1/16), rem) unit(@vertical * (1/16), rem) unit(@bottom * (1/16), rem);
}

.border-width (@top; @right; @bottom; @left) {
	border-width: unit(@top, px) unit(@right, px) unit(@bottom, px) unit(@left, px);
	border-width: unit(@top * (1/16), rem) unit(@right * (1/16), rem) unit(@bottom * (1/16), rem) unit(@left * (1/16), rem);
}

